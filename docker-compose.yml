version: '3.8'

services:
  app:
    container_name: 'pagopa-wallet-eventdispatcher'
    build:
      dockerfile: Dockerfile
      context: .
    env_file:
      - ./.env
    environment:
      SPRING_PROFILES_ACTIVE: local
    depends_on:
      - init-kafka
      - azurite-init
    ports:
      - "8080:8080"
    networks:
      - pagopa-wallet-net

  storage:
    image: mcr.microsoft.com/azure-storage/azurite:3.31.0@sha256:d449d953a1c5bd1e26c800744a65c451e88f3387b696e02e3e2e79a995c3105b
    container_name: azurite
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - $PWD/.data:/opt/azurite/folder
    networks:
      - pagopa-wallet-net

  azurite-init:
    container_name: azurite-init
    build:
      context: .
      dockerfile: azurite/Dockerfile
    depends_on:
      - storage
    environment:
      QUEUE_WALLET_EXPIRATION: wallet-expiration-queue
      QUEUE_CDC_WALLET: pagopa-wallet-cdc-queue
    networks:
      - pagopa-wallet-net

  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1@sha256:a7c0a20dce46a705300cd464e511e9c70ac55ec7e62c024867470a19ce210563
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - pagopa-wallet-net

  kafka:
    image: confluentinc/cp-kafka:6.1.1@sha256:537c303f182ff6ba665f324520105c44970c97d7ef94b306709a5d68b8c1aed7
    depends_on:
      - zookeeper
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - '9092:9092'
    expose:
      - '29092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'
    networks:
      - pagopa-wallet-net

  init-kafka:
    image: confluentinc/cp-kafka:6.1.1@sha256:537c303f182ff6ba665f324520105c44970c97d7ef94b306709a5d68b8c1aed7
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic payment-wallet-injection-topic --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "
    networks:
      - pagopa-wallet-net

  kafka-ui:
    image: provectuslabs/kafka-ui@sha256:8f2ff02d64b0a7a2b71b6b3b3148b85f66d00ec20ad40c30bdcd415d46d31818
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - pagopa-wallet-net


  redis:
    container_name: wallet-redis
    image: redis@sha256:e422889e156ebea83856b6ff973bfe0c86bce867d80def228044eeecf925592b
    command: [ "sh", "-c", 'exec redis-server --requirepass "$$REDIS_PASSWORD"' ]
    ports:
      - "6379:6379"
    networks:
      - pagopa-wallet-net

  redis-insight:
    container_name: wallet-redis-insight
    image: redislabs/redisinsight@sha256:bbfe06e00282fc051bbfadd49286865e75b359baea62f0d56af0cb0d5684b942
    ports:
      - "5540:5540"
    networks:
      - pagopa-wallet-net

networks:
  pagopa-wallet-net:
    name: pagopa-wallet-net
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
